definitions:
  models.Basket:
    properties:
      ctreate_at:
        type: string
      id:
        type: string
      price:
        type: integer
      product_id:
        type: string
      quantity:
        type: integer
      sale_id:
        type: string
    type: object
  models.BasketResponse:
    properties:
      baskets:
        items:
          $ref: '#/definitions/models.Basket'
        type: array
      count:
        type: integer
    type: object
  models.Branch:
    properties:
      address:
        type: string
      ctreate_at:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  models.BranchResponse:
    properties:
      branches:
        items:
          $ref: '#/definitions/models.Branch'
        type: array
      count:
        type: integer
    type: object
  models.Category:
    properties:
      ctreate_at:
        type: string
      id:
        type: string
      name:
        type: string
      parent_id:
        type: string
    type: object
  models.CreateBasket:
    properties:
      price:
        type: integer
      product_id:
        type: string
      quantity:
        type: integer
      sale_id:
        type: string
    type: object
  models.CreateBranch:
    properties:
      address:
        type: string
      name:
        type: string
    type: object
  models.CreateCategory:
    properties:
      name:
        type: string
      parent_id:
        type: string
    type: object
  models.CreateProduct:
    properties:
      barcode:
        type: integer
      category_id:
        type: string
      name:
        type: string
      price:
        type: integer
    type: object
  models.CreateSale:
    properties:
      branch_id:
        type: string
      cashier_id:
        type: string
      clientname:
        type: string
      payment_type:
        type: string
      price:
        type: number
      shopassistant_id:
        type: string
      status_type:
        type: string
    type: object
  models.CreateStaff:
    properties:
      balance:
        type: string
      birthdate:
        type: string
      branch_id:
        type: string
      login:
        type: string
      name:
        type: string
      password:
        type: string
      tarif_id:
        type: string
      type_stuff:
        type: string
    type: object
  models.CreateStaff_Tarif:
    properties:
      amount_for_card:
        type: integer
      amount_for_cashe:
        type: integer
      name:
        type: string
      tarif_type:
        type: string
    type: object
  models.CreateStorage:
    properties:
      branch_id:
        type: string
      count:
        type: integer
      product_id:
        type: string
    type: object
  models.CreateTransaction:
    properties:
      amount:
        type: string
      description:
        type: string
      sale_id:
        type: string
      sourcetype:
        type: string
      staff_id:
        type: string
      transaction_type:
        type: string
    type: object
  models.CreateTransactionStorage:
    properties:
      branch_id:
        type: string
      price:
        type: string
      product_id:
        type: string
      quantity:
        type: string
      staff_id:
        type: string
      transaction_type:
        type: string
    type: object
  models.Product:
    properties:
      barcode:
        type: string
      category_id:
        type: string
      create_at:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: integer
    type: object
  models.Response:
    properties:
      data: {}
      description:
        type: string
      statusCode:
        type: integer
    type: object
  models.Sale:
    properties:
      branch_id:
        type: string
      cashier_id:
        type: string
      clientname:
        type: string
      ctreate_at:
        type: string
      id:
        type: string
      payment_type:
        type: string
      price:
        type: number
      shopassistant_id:
        type: string
      status_type:
        type: string
    type: object
  models.SaleRepos:
    properties:
      count:
        type: integer
      sales:
        items:
          $ref: '#/definitions/models.Sale'
        type: array
    type: object
  models.Staff:
    properties:
      age:
        type: integer
      balance:
        type: string
      birthdate:
        type: string
      branch_id:
        type: string
      ctreate_at:
        type: string
      id:
        type: string
      login:
        type: string
      name:
        type: string
      password:
        type: string
      tarif_id:
        type: string
      type_stuff:
        type: string
    type: object
  models.Staff_Tarif:
    properties:
      amount_for_card:
        type: integer
      amount_for_cashe:
        type: integer
      ctreate_at:
        type: string
      id:
        type: string
      name:
        type: string
      tarif_type:
        type: string
    type: object
  models.Storage:
    properties:
      branch_id:
        type: string
      count:
        type: integer
      ctreate_at:
        type: string
      id:
        type: string
      product_id:
        type: string
    type: object
  models.Transaction:
    properties:
      amount:
        type: string
      ctreate_at:
        type: string
      description:
        type: string
      id:
        type: string
      sale_id:
        type: string
      sourcetype:
        type: string
      staff_id:
        type: string
      transaction_type:
        type: string
    type: object
  models.TransactionStorage:
    properties:
      branch_id:
        type: string
      ctreate_at:
        type: string
      id:
        type: string
      price:
        type: string
      product_id:
        type: string
      quantity:
        type: string
      staff_id:
        type: string
      transaction_type:
        type: string
    type: object
  models.UpdateBasket:
    properties:
      id:
        type: string
      price:
        type: integer
      product_id:
        type: string
      quantity:
        type: integer
      sale_id:
        type: string
    type: object
  models.UpdateBranch:
    properties:
      address:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  models.UpdateCategory:
    properties:
      id:
        type: string
      name:
        type: string
      parent_id:
        type: string
    type: object
  models.UpdateProduct:
    properties:
      category_id:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: integer
    type: object
  models.UpdateSale:
    properties:
      branch_id:
        type: string
      cashier_id:
        type: string
      clientname:
        type: string
      id:
        type: string
      price:
        type: number
      shopassistant_id:
        type: string
    type: object
  models.UpdateStaff:
    properties:
      age:
        type: integer
      balance:
        type: string
      birthdate:
        type: string
      branch_id:
        type: string
      id:
        type: string
      name:
        type: string
      tarif_id:
        type: string
    type: object
  models.UpdateStaff_Tarif:
    properties:
      amount_for_card:
        type: integer
      amount_for_cashe:
        type: integer
      id:
        type: string
      name:
        type: string
    type: object
  models.UpdateStaffPassword:
    properties:
      new_password:
        type: string
      old_password:
        type: string
    type: object
  models.UpdateStorage:
    properties:
      branch_id:
        type: string
      count:
        type: integer
      id:
        type: string
      product_id:
        type: string
    type: object
  models.UpdateTransaction:
    properties:
      amount:
        type: string
      description:
        type: string
      id:
        type: string
      sale_id:
        type: string
      staff_id:
        type: string
    type: object
  models.UpdateTransactionStorage:
    properties:
      branch_id:
        type: string
      id:
        type: string
      price:
        type: string
      product_id:
        type: string
      quantity:
        type: string
      staff_id:
        type: string
    type: object
info:
  contact: {}
paths:
  /basket:
    post:
      consumes:
      - application/json
      description: create a new basket
      parameters:
      - description: basket
        in: body
        name: basket
        schema:
          $ref: '#/definitions/models.CreateBasket'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Basket'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Creates a new basket
      tags:
      - basket
  /basket/{id}:
    delete:
      consumes:
      - application/json
      description: delete basket
      parameters:
      - description: basket_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Delete basket
      tags:
      - basket
    get:
      consumes:
      - application/json
      description: get basket by ID
      parameters:
      - description: basket
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Basket'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Gets basket
      tags:
      - basket
    put:
      consumes:
      - application/json
      description: update basket
      parameters:
      - description: basket_id
        in: path
        name: id
        required: true
        type: string
      - description: basket
        in: body
        name: basket
        required: true
        schema:
          $ref: '#/definitions/models.UpdateBasket'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Basket'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Update basket
      tags:
      - basket
  /baskets:
    get:
      consumes:
      - application/json
      description: get basket list
      parameters:
      - description: page
        in: query
        name: page
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BasketResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Get basket list
      tags:
      - basket
  /branch:
    post:
      consumes:
      - application/json
      description: create a new branch
      parameters:
      - description: branch
        in: body
        name: branch
        schema:
          $ref: '#/definitions/models.CreateBranch'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Branch'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Creates a new branch
      tags:
      - branch
  /branch/{id}:
    delete:
      consumes:
      - application/json
      description: delete branch
      parameters:
      - description: branch_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Delete branch
      tags:
      - branch
    get:
      consumes:
      - application/json
      description: get branch by ID
      parameters:
      - description: branch
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Branch'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Gets branch
      tags:
      - branch
    put:
      consumes:
      - application/json
      description: update branch
      parameters:
      - description: branch_id
        in: path
        name: id
        required: true
        type: string
      - description: branch
        in: body
        name: branch
        required: true
        schema:
          $ref: '#/definitions/models.UpdateBranch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Branch'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Update branch
      tags:
      - branch
  /branchs:
    get:
      consumes:
      - application/json
      description: get branch list
      parameters:
      - description: page
        in: query
        name: page
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BranchResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Get branch list
      tags:
      - branch
  /categories:
    get:
      consumes:
      - application/json
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: limit
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get a list of categories
      tags:
      - category
  /category:
    post:
      consumes:
      - application/json
      description: create a new category
      parameters:
      - description: category
        in: body
        name: basket
        schema:
          $ref: '#/definitions/models.CreateCategory'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Creates a new category
      tags:
      - category
  /category/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Data successfully deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete category by ID
      tags:
      - category
    get:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get category by ID
      tags:
      - category
    put:
      consumes:
      - application/json
      description: update category
      parameters:
      - description: category
        in: path
        name: id
        required: true
        type: string
      - description: category
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Update category
      tags:
      - category
  /product:
    post:
      consumes:
      - application/json
      description: create a new product
      parameters:
      - description: product
        in: body
        name: basket
        schema:
          $ref: '#/definitions/models.CreateProduct'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Creates a new product
      tags:
      - product
  /product/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Data successfully deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete product by ID
      tags:
      - product
    get:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get product by ID
      tags:
      - product
    put:
      consumes:
      - application/json
      description: update product
      parameters:
      - description: product
        in: path
        name: id
        required: true
        type: string
      - description: product
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UpdateProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Update product
      tags:
      - product
  /products:
    get:
      consumes:
      - application/json
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: limit
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get a list of products
      tags:
      - product
  /sale:
    post:
      consumes:
      - application/json
      description: create a new sale
      parameters:
      - description: sale
        in: body
        name: basket
        schema:
          $ref: '#/definitions/models.CreateSale'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Sale'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Creates a new sale
      tags:
      - sale
  /sale/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Sale ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete sale by ID
      tags:
      - sale
    get:
      consumes:
      - application/json
      parameters:
      - description: Sale ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Sale'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get sale by ID
      tags:
      - sale
    put:
      consumes:
      - application/json
      description: update sale
      parameters:
      - description: sale
        in: path
        name: id
        required: true
        type: string
      - description: sale
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UpdateSale'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Sale'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Update sale
      tags:
      - sale
  /sales:
    get:
      consumes:
      - application/json
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: limit
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      - description: price from for response
        in: query
        name: fromprice
        type: number
      - description: price to for response
        in: query
        name: toprice
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SaleRepos'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get a list of sales
      tags:
      - sale
  /staff:
    post:
      consumes:
      - application/json
      description: create a new staff
      parameters:
      - description: staff
        in: body
        name: staff
        schema:
          $ref: '#/definitions/models.CreateStaff'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Staff'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Creates a new staff
      tags:
      - staff
  /staff/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Staff ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete staff by ID
      tags:
      - staff
    get:
      consumes:
      - application/json
      parameters:
      - description: Staff ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Staff'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get staff by ID
      tags:
      - staff
    patch:
      consumes:
      - application/json
      description: update staff password
      parameters:
      - description: staff_id
        in: path
        name: id
        required: true
        type: string
      - description: staff
        in: body
        name: staff
        required: true
        schema:
          $ref: '#/definitions/models.UpdateStaffPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Update staff password
      tags:
      - staff
    put:
      consumes:
      - application/json
      description: update staff
      parameters:
      - description: staff
        in: path
        name: id
        required: true
        type: string
      - description: staff
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UpdateStaff'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Staff'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Update staff
      tags:
      - staff
  /staff_tarif:
    post:
      consumes:
      - application/json
      description: create a new staff_tarif
      parameters:
      - description: staff_tarif
        in: body
        name: basket
        schema:
          $ref: '#/definitions/models.CreateStaff_Tarif'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Staff_Tarif'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Creates a new staff_tarif
      tags:
      - staff_tarif
  /staff_tarif/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Staff_Tarif ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete staff tarif by ID
      tags:
      - staff_tarif
    get:
      consumes:
      - application/json
      parameters:
      - description: Staff_Tarif ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Staff_Tarif'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get staff tarif by ID
      tags:
      - staff_tarif
    put:
      consumes:
      - application/json
      description: update staff_tarif
      parameters:
      - description: staff_tarif
        in: path
        name: id
        required: true
        type: string
      - description: staff_tarif
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UpdateStaff_Tarif'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Staff_Tarif'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Update staff_tarif
      tags:
      - staff_tarif
  /staff_tarifs:
    get:
      consumes:
      - application/json
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: limit
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Staff_Tarif'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get a list of staff tarifs
      tags:
      - staff_tarif
  /staffs:
    get:
      consumes:
      - application/json
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: limit
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Staff'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get a list of staff
      tags:
      - staff
  /storage:
    post:
      consumes:
      - application/json
      description: create a new storage
      parameters:
      - description: storage
        in: body
        name: basket
        schema:
          $ref: '#/definitions/models.CreateStorage'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Storage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Creates a new storage
      tags:
      - storage
  /storage/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Storage ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Data successfully deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete storage by ID
      tags:
      - storage
    get:
      consumes:
      - application/json
      parameters:
      - description: Storage ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Storage'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get storage by ID
      tags:
      - storage
    put:
      consumes:
      - application/json
      description: update storage
      parameters:
      - description: storage
        in: path
        name: id
        required: true
        type: string
      - description: storage
        in: body
        name: storage
        required: true
        schema:
          $ref: '#/definitions/models.UpdateStorage'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Storage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Update storage
      tags:
      - storage
  /storages:
    get:
      consumes:
      - application/json
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: limit
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Storage'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get a list of storage
      tags:
      - storage
  /transaction:
    post:
      consumes:
      - application/json
      description: create a new storage
      parameters:
      - description: transaction
        in: body
        name: transaction
        schema:
          $ref: '#/definitions/models.CreateTransaction'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Transaction'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Creates a new storage
      tags:
      - transaction
  /transaction/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: transaction
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Data deleted successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete transaction by ID
      tags:
      - transaction
    get:
      consumes:
      - application/json
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Transaction'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get transaction by ID
      tags:
      - transaction
    put:
      consumes:
      - application/json
      description: update sale
      parameters:
      - description: transaction
        in: path
        name: id
        required: true
        type: string
      - description: transaction
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/models.UpdateTransaction'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Transaction'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Update sale
      tags:
      - transaction
  /transaction_storage:
    post:
      consumes:
      - application/json
      description: create a new storage
      parameters:
      - description: transaction_storage
        in: body
        name: basket
        schema:
          $ref: '#/definitions/models.CreateTransactionStorage'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.TransactionStorage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Creates a new storage
      tags:
      - transaction_storage
  /transaction_storage/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Transaction Storage ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Data deleted successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete transaction storage by ID
      tags:
      - transaction_storage
    get:
      consumes:
      - application/json
      parameters:
      - description: Transaction Storage ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TransactionStorage'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get transaction storage by ID
      tags:
      - transaction_storage
    put:
      consumes:
      - application/json
      description: update transaction_storage
      parameters:
      - description: transaction_storage
        in: path
        name: id
        required: true
        type: string
      - description: transaction_storage
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UpdateTransactionStorage'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TransactionStorage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Update transaction_storage
      tags:
      - transaction_storage
  /transaction_storages:
    get:
      consumes:
      - application/json
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: limit
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TransactionStorage'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get a list of transaction_storages
      tags:
      - transaction_storage
  /transactions:
    get:
      consumes:
      - application/json
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: limit
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      - description: amount from for response
        in: query
        name: fromamount
        type: number
      - description: amount to for response
        in: query
        name: toamount
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Transaction'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get a list of transactions
      tags:
      - transaction
swagger: "2.0"
